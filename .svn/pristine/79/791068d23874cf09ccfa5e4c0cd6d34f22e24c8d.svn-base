// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role.proto

#ifndef PROTOBUF_role_2eproto__INCLUDED
#define PROTOBUF_role_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "item.pb.h"
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_role_2eproto();
void protobuf_AssignDesc_role_2eproto();
void protobuf_ShutdownFile_role_2eproto();

class PRole;

// ===================================================================

class PRole : public ::google::protobuf::Message {
 public:
  PRole();
  virtual ~PRole();

  PRole(const PRole& from);

  inline PRole& operator=(const PRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PRole& default_instance();

  void Swap(PRole* other);

  // implements Message ----------------------------------------------

  PRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PRole& from);
  void MergeFrom(const PRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 roleId = 1;
  inline bool has_roleid() const;
  inline void clear_roleid();
  static const int kRoleIdFieldNumber = 1;
  inline ::google::protobuf::int64 roleid() const;
  inline void set_roleid(::google::protobuf::int64 value);

  // required string roleName = 2;
  inline bool has_rolename() const;
  inline void clear_rolename();
  static const int kRoleNameFieldNumber = 2;
  inline const ::std::string& rolename() const;
  inline void set_rolename(const ::std::string& value);
  inline void set_rolename(const char* value);
  inline void set_rolename(const char* value, size_t size);
  inline ::std::string* mutable_rolename();
  inline ::std::string* release_rolename();
  inline void set_allocated_rolename(::std::string* rolename);

  // required int32 level = 3;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::int32 level() const;
  inline void set_level(::google::protobuf::int32 value);

  // required int32 vipLvl = 4;
  inline bool has_viplvl() const;
  inline void clear_viplvl();
  static const int kVipLvlFieldNumber = 4;
  inline ::google::protobuf::int32 viplvl() const;
  inline void set_viplvl(::google::protobuf::int32 value);

  // required int32 coin = 5;
  inline bool has_coin() const;
  inline void clear_coin();
  static const int kCoinFieldNumber = 5;
  inline ::google::protobuf::int32 coin() const;
  inline void set_coin(::google::protobuf::int32 value);

  // required int32 rmb = 6;
  inline bool has_rmb() const;
  inline void clear_rmb();
  static const int kRmbFieldNumber = 6;
  inline ::google::protobuf::int32 rmb() const;
  inline void set_rmb(::google::protobuf::int32 value);

  // required int32 stamina = 7;
  inline bool has_stamina() const;
  inline void clear_stamina();
  static const int kStaminaFieldNumber = 7;
  inline ::google::protobuf::int32 stamina() const;
  inline void set_stamina(::google::protobuf::int32 value);

  // repeated .PItem equipList = 8;
  inline int equiplist_size() const;
  inline void clear_equiplist();
  static const int kEquipListFieldNumber = 8;
  inline const ::PItem& equiplist(int index) const;
  inline ::PItem* mutable_equiplist(int index);
  inline ::PItem* add_equiplist();
  inline const ::google::protobuf::RepeatedPtrField< ::PItem >&
      equiplist() const;
  inline ::google::protobuf::RepeatedPtrField< ::PItem >*
      mutable_equiplist();

  // @@protoc_insertion_point(class_scope:PRole)
 private:
  inline void set_has_roleid();
  inline void clear_has_roleid();
  inline void set_has_rolename();
  inline void clear_has_rolename();
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_viplvl();
  inline void clear_has_viplvl();
  inline void set_has_coin();
  inline void clear_has_coin();
  inline void set_has_rmb();
  inline void clear_has_rmb();
  inline void set_has_stamina();
  inline void clear_has_stamina();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 roleid_;
  ::std::string* rolename_;
  ::google::protobuf::int32 level_;
  ::google::protobuf::int32 viplvl_;
  ::google::protobuf::int32 coin_;
  ::google::protobuf::int32 rmb_;
  ::google::protobuf::RepeatedPtrField< ::PItem > equiplist_;
  ::google::protobuf::int32 stamina_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_role_2eproto();
  friend void protobuf_AssignDesc_role_2eproto();
  friend void protobuf_ShutdownFile_role_2eproto();

  void InitAsDefaultInstance();
  static PRole* default_instance_;
};
// ===================================================================


// ===================================================================

// PRole

// required int64 roleId = 1;
inline bool PRole::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PRole::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PRole::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PRole::clear_roleid() {
  roleid_ = GOOGLE_LONGLONG(0);
  clear_has_roleid();
}
inline ::google::protobuf::int64 PRole::roleid() const {
  return roleid_;
}
inline void PRole::set_roleid(::google::protobuf::int64 value) {
  set_has_roleid();
  roleid_ = value;
}

// required string roleName = 2;
inline bool PRole::has_rolename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PRole::set_has_rolename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PRole::clear_has_rolename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PRole::clear_rolename() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    rolename_->clear();
  }
  clear_has_rolename();
}
inline const ::std::string& PRole::rolename() const {
  return *rolename_;
}
inline void PRole::set_rolename(const ::std::string& value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void PRole::set_rolename(const char* value) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(value);
}
inline void PRole::set_rolename(const char* value, size_t size) {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  rolename_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PRole::mutable_rolename() {
  set_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    rolename_ = new ::std::string;
  }
  return rolename_;
}
inline ::std::string* PRole::release_rolename() {
  clear_has_rolename();
  if (rolename_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = rolename_;
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PRole::set_allocated_rolename(::std::string* rolename) {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (rolename) {
    set_has_rolename();
    rolename_ = rolename;
  } else {
    clear_has_rolename();
    rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required int32 level = 3;
inline bool PRole::has_level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PRole::set_has_level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PRole::clear_has_level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PRole::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PRole::level() const {
  return level_;
}
inline void PRole::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
}

// required int32 vipLvl = 4;
inline bool PRole::has_viplvl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PRole::set_has_viplvl() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PRole::clear_has_viplvl() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PRole::clear_viplvl() {
  viplvl_ = 0;
  clear_has_viplvl();
}
inline ::google::protobuf::int32 PRole::viplvl() const {
  return viplvl_;
}
inline void PRole::set_viplvl(::google::protobuf::int32 value) {
  set_has_viplvl();
  viplvl_ = value;
}

// required int32 coin = 5;
inline bool PRole::has_coin() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PRole::set_has_coin() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PRole::clear_has_coin() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PRole::clear_coin() {
  coin_ = 0;
  clear_has_coin();
}
inline ::google::protobuf::int32 PRole::coin() const {
  return coin_;
}
inline void PRole::set_coin(::google::protobuf::int32 value) {
  set_has_coin();
  coin_ = value;
}

// required int32 rmb = 6;
inline bool PRole::has_rmb() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PRole::set_has_rmb() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PRole::clear_has_rmb() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PRole::clear_rmb() {
  rmb_ = 0;
  clear_has_rmb();
}
inline ::google::protobuf::int32 PRole::rmb() const {
  return rmb_;
}
inline void PRole::set_rmb(::google::protobuf::int32 value) {
  set_has_rmb();
  rmb_ = value;
}

// required int32 stamina = 7;
inline bool PRole::has_stamina() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PRole::set_has_stamina() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PRole::clear_has_stamina() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PRole::clear_stamina() {
  stamina_ = 0;
  clear_has_stamina();
}
inline ::google::protobuf::int32 PRole::stamina() const {
  return stamina_;
}
inline void PRole::set_stamina(::google::protobuf::int32 value) {
  set_has_stamina();
  stamina_ = value;
}

// repeated .PItem equipList = 8;
inline int PRole::equiplist_size() const {
  return equiplist_.size();
}
inline void PRole::clear_equiplist() {
  equiplist_.Clear();
}
inline const ::PItem& PRole::equiplist(int index) const {
  return equiplist_.Get(index);
}
inline ::PItem* PRole::mutable_equiplist(int index) {
  return equiplist_.Mutable(index);
}
inline ::PItem* PRole::add_equiplist() {
  return equiplist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::PItem >&
PRole::equiplist() const {
  return equiplist_;
}
inline ::google::protobuf::RepeatedPtrField< ::PItem >*
PRole::mutable_equiplist() {
  return &equiplist_;
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_role_2eproto__INCLUDED
