// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: role.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "role.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* PRole_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PRole_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_role_2eproto() {
  protobuf_AddDesc_role_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "role.proto");
  GOOGLE_CHECK(file != NULL);
  PRole_descriptor_ = file->message_type(0);
  static const int PRole_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, roleid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, rolename_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, viplvl_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, coin_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, rmb_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, stamina_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, equiplist_),
  };
  PRole_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      PRole_descriptor_,
      PRole::default_instance_,
      PRole_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PRole, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(PRole));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_role_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    PRole_descriptor_, &PRole::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_role_2eproto() {
  delete PRole::default_instance_;
  delete PRole_reflection_;
}

void protobuf_AddDesc_role_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::protobuf_AddDesc_item_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nrole.proto\032\nitem.proto\"\217\001\n\005PRole\022\016\n\006ro"
    "leId\030\001 \002(\003\022\020\n\010roleName\030\002 \002(\t\022\r\n\005level\030\003 "
    "\002(\005\022\016\n\006vipLvl\030\004 \002(\005\022\014\n\004coin\030\005 \002(\005\022\013\n\003rmb"
    "\030\006 \002(\005\022\017\n\007stamina\030\007 \002(\005\022\031\n\tequipList\030\010 \003"
    "(\0132\006.PItemB.\n com.doteyplay.game.message"
    ".protoB\nRoleProBuf", 218);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "role.proto", &protobuf_RegisterTypes);
  PRole::default_instance_ = new PRole();
  PRole::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_role_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_role_2eproto {
  StaticDescriptorInitializer_role_2eproto() {
    protobuf_AddDesc_role_2eproto();
  }
} static_descriptor_initializer_role_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int PRole::kRoleIdFieldNumber;
const int PRole::kRoleNameFieldNumber;
const int PRole::kLevelFieldNumber;
const int PRole::kVipLvlFieldNumber;
const int PRole::kCoinFieldNumber;
const int PRole::kRmbFieldNumber;
const int PRole::kStaminaFieldNumber;
const int PRole::kEquipListFieldNumber;
#endif  // !_MSC_VER

PRole::PRole()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void PRole::InitAsDefaultInstance() {
}

PRole::PRole(const PRole& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void PRole::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = GOOGLE_LONGLONG(0);
  rolename_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  level_ = 0;
  viplvl_ = 0;
  coin_ = 0;
  rmb_ = 0;
  stamina_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PRole::~PRole() {
  SharedDtor();
}

void PRole::SharedDtor() {
  if (rolename_ != &::google::protobuf::internal::kEmptyString) {
    delete rolename_;
  }
  if (this != default_instance_) {
  }
}

void PRole::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PRole::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PRole_descriptor_;
}

const PRole& PRole::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_role_2eproto();
  return *default_instance_;
}

PRole* PRole::default_instance_ = NULL;

PRole* PRole::New() const {
  return new PRole;
}

void PRole::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    roleid_ = GOOGLE_LONGLONG(0);
    if (has_rolename()) {
      if (rolename_ != &::google::protobuf::internal::kEmptyString) {
        rolename_->clear();
      }
    }
    level_ = 0;
    viplvl_ = 0;
    coin_ = 0;
    rmb_ = 0;
    stamina_ = 0;
  }
  equiplist_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool PRole::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 roleId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &roleid_)));
          set_has_roleid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_roleName;
        break;
      }

      // required string roleName = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_roleName:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_rolename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->rolename().data(), this->rolename().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_level;
        break;
      }

      // required int32 level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
          set_has_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_vipLvl;
        break;
      }

      // required int32 vipLvl = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_vipLvl:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &viplvl_)));
          set_has_viplvl();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_coin;
        break;
      }

      // required int32 coin = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_coin:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &coin_)));
          set_has_coin();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_rmb;
        break;
      }

      // required int32 rmb = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_rmb:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &rmb_)));
          set_has_rmb();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_stamina;
        break;
      }

      // required int32 stamina = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_stamina:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stamina_)));
          set_has_stamina();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_equipList;
        break;
      }

      // repeated .PItem equipList = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_equipList:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_equiplist()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_equipList;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void PRole::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int64 roleId = 1;
  if (has_roleid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->roleid(), output);
  }

  // required string roleName = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->rolename(), output);
  }

  // required int32 level = 3;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->level(), output);
  }

  // required int32 vipLvl = 4;
  if (has_viplvl()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->viplvl(), output);
  }

  // required int32 coin = 5;
  if (has_coin()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->coin(), output);
  }

  // required int32 rmb = 6;
  if (has_rmb()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->rmb(), output);
  }

  // required int32 stamina = 7;
  if (has_stamina()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->stamina(), output);
  }

  // repeated .PItem equipList = 8;
  for (int i = 0; i < this->equiplist_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->equiplist(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* PRole::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int64 roleId = 1;
  if (has_roleid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->roleid(), target);
  }

  // required string roleName = 2;
  if (has_rolename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->rolename().data(), this->rolename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->rolename(), target);
  }

  // required int32 level = 3;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->level(), target);
  }

  // required int32 vipLvl = 4;
  if (has_viplvl()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->viplvl(), target);
  }

  // required int32 coin = 5;
  if (has_coin()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->coin(), target);
  }

  // required int32 rmb = 6;
  if (has_rmb()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->rmb(), target);
  }

  // required int32 stamina = 7;
  if (has_stamina()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->stamina(), target);
  }

  // repeated .PItem equipList = 8;
  for (int i = 0; i < this->equiplist_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->equiplist(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int PRole::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int64 roleId = 1;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->roleid());
    }

    // required string roleName = 2;
    if (has_rolename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->rolename());
    }

    // required int32 level = 3;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

    // required int32 vipLvl = 4;
    if (has_viplvl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->viplvl());
    }

    // required int32 coin = 5;
    if (has_coin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->coin());
    }

    // required int32 rmb = 6;
    if (has_rmb()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->rmb());
    }

    // required int32 stamina = 7;
    if (has_stamina()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stamina());
    }

  }
  // repeated .PItem equipList = 8;
  total_size += 1 * this->equiplist_size();
  for (int i = 0; i < this->equiplist_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->equiplist(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PRole::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const PRole* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const PRole*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PRole::MergeFrom(const PRole& from) {
  GOOGLE_CHECK_NE(&from, this);
  equiplist_.MergeFrom(from.equiplist_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_roleid()) {
      set_roleid(from.roleid());
    }
    if (from.has_rolename()) {
      set_rolename(from.rolename());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_viplvl()) {
      set_viplvl(from.viplvl());
    }
    if (from.has_coin()) {
      set_coin(from.coin());
    }
    if (from.has_rmb()) {
      set_rmb(from.rmb());
    }
    if (from.has_stamina()) {
      set_stamina(from.stamina());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void PRole::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PRole::CopyFrom(const PRole& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PRole::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  for (int i = 0; i < equiplist_size(); i++) {
    if (!this->equiplist(i).IsInitialized()) return false;
  }
  return true;
}

void PRole::Swap(PRole* other) {
  if (other != this) {
    std::swap(roleid_, other->roleid_);
    std::swap(rolename_, other->rolename_);
    std::swap(level_, other->level_);
    std::swap(viplvl_, other->viplvl_);
    std::swap(coin_, other->coin_);
    std::swap(rmb_, other->rmb_);
    std::swap(stamina_, other->stamina_);
    equiplist_.Swap(&other->equiplist_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata PRole::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PRole_descriptor_;
  metadata.reflection = PRole_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
