//
//  FighterCtrl.cpp
//  fancyHeart
//
//  Created by 秦亮亮 on 14-5-5.
//
//

#include "MFighter.h"
#include "FightScene.h"
MFighter* MFighter::create(int pos)
{
    MFighter* pRet=new MFighter();
    if(pRet && pRet->init(pos))
    {
        pRet->autorelease();
        return pRet;
    }
    else
    {
        delete pRet;
        pRet = NULL;
        return NULL;
    }
}

bool MFighter::init(int pos)
{
    this->pos=pos;
    this->currentState=fstate::idle;
//    this->view=Fighter::create("HeroAnimation","HeroAnimation0", pos);
//    this->view->delegate=this;
    //初始化技能
    this->initSkill();
    return true;
}

void MFighter::initSkill()
{
    Skill* skill=Skill::create(this, 1001);
    this->skills.pushBack(skill);
}

void MFighter::start()
{
    Director::getInstance()->getScheduler()->schedule(schedule_selector(MFighter::timeHandler), this, 0.1, false);
//    this->timeHandler(0);
    log("random:%f,%ld",Utils::random01(),random());
}

void MFighter::pause()
{
    Director::getInstance()->getScheduler()->pauseTarget(this);
}

void MFighter::timeHandler(float dt)
{
    if(this->currentState==fstate::idle)this->startAttack(0);
}

void MFighter::startAttack(int triggerType)
{
    Vector<MFighter*>foes=pos<5?FightMgr::getInstance()->rightArr:FightMgr::getInstance()->leftArr;
    bool isEnd=true;
    for(int i=0;i<foes.size();i++)
    {
        if(foes.at(i)->currentState!=fstate::die)
        {
            isEnd=false;
            break;
        }
    }
    if(isEnd)
    {
        
        return;
    }
    this->currentState=fstate::start;
    //自动选择目标
    MFighter* lf=FightMgr::getInstance()->leftArr.at(0);
    MFighter* rf=FightMgr::getInstance()->rightArr.at(0);
    //取mf普通攻击距离 和默认目标的位置计算是否移动
    float dis=rf->view->getPosition().x-lf->view->getPosition().x;
    this->foe=pos<5?rf:lf;
//    log("dis:%f",dis);
    //检查攻击距离
    if(abs(dis) >40*6)
    {
        this->view->run();
        //move
        return;
    }
    
    //技能列表，选择技能
   this->selectSkill();
    Skill* pSkill=this->skills.at(0);
    if(pSkill->getIsReady())
    {
        pSkill->start();
//        this->view->attack();
    }
}
/*
 1个普通攻击
 2个自动攻击的技能（优先使用，随机取一个，会有自己的CD和公共冷却时间）
 1手点的
 */
int MFighter::selectSkill()
{
    return 0;
}

//吟唱（引导）
void MFighter::spell()
{
    this->currentState=fstate::spell;
    this->view->spell();
}

//施法(攻击）
void MFighter::cast()
{
    this->currentState=fstate::cast;
    this->view->attack();
}

//仍东西
void MFighter::throwing()
{
    this->currentState=fstate::throwing;
    this->view->lineThrow();
}

//蓄力
void MFighter::buildup()
{
    this->currentState=fstate::throwing;
}

//受击
void MFighter::attacked()
{
    if(this->hp<=0)
    {
        this->die();
        return;
    }
    this->currentState=fstate::idle;
    this->view->attacked();
}

//死亡
void MFighter::die()
{
    this->currentState=fstate::die;
    this->view->die();
}

MFighter::~MFighter()
{
    Director::getInstance()->getScheduler()->unschedule(schedule_selector(MFighter::timeHandler), this);
    this->view->removeFromParent();
}