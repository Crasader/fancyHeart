// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: upRole.proto

#ifndef PROTOBUF_upRole_2eproto__INCLUDED
#define PROTOBUF_upRole_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_upRole_2eproto();
void protobuf_AssignDesc_upRole_2eproto();
void protobuf_ShutdownFile_upRole_2eproto();

class PUpRole;

// ===================================================================

class PUpRole : public ::google::protobuf::Message {
 public:
  PUpRole();
  virtual ~PUpRole();

  PUpRole(const PUpRole& from);

  inline PUpRole& operator=(const PUpRole& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PUpRole& default_instance();

  void Swap(PUpRole* other);

  // implements Message ----------------------------------------------

  PUpRole* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PUpRole& from);
  void MergeFrom(const PUpRole& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 fieldType = 1;
  inline bool has_fieldtype() const;
  inline void clear_fieldtype();
  static const int kFieldTypeFieldNumber = 1;
  inline ::google::protobuf::int32 fieldtype() const;
  inline void set_fieldtype(::google::protobuf::int32 value);

  // required int32 addValue = 2;
  inline bool has_addvalue() const;
  inline void clear_addvalue();
  static const int kAddValueFieldNumber = 2;
  inline ::google::protobuf::int32 addvalue() const;
  inline void set_addvalue(::google::protobuf::int32 value);

  // required int32 finalValue = 3;
  inline bool has_finalvalue() const;
  inline void clear_finalvalue();
  static const int kFinalValueFieldNumber = 3;
  inline ::google::protobuf::int32 finalvalue() const;
  inline void set_finalvalue(::google::protobuf::int32 value);

  // required string itemType = 4;
  inline bool has_itemtype() const;
  inline void clear_itemtype();
  static const int kItemTypeFieldNumber = 4;
  inline const ::std::string& itemtype() const;
  inline void set_itemtype(const ::std::string& value);
  inline void set_itemtype(const char* value);
  inline void set_itemtype(const char* value, size_t size);
  inline ::std::string* mutable_itemtype();
  inline ::std::string* release_itemtype();
  inline void set_allocated_itemtype(::std::string* itemtype);

  // @@protoc_insertion_point(class_scope:PUpRole)
 private:
  inline void set_has_fieldtype();
  inline void clear_has_fieldtype();
  inline void set_has_addvalue();
  inline void clear_has_addvalue();
  inline void set_has_finalvalue();
  inline void clear_has_finalvalue();
  inline void set_has_itemtype();
  inline void clear_has_itemtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 fieldtype_;
  ::google::protobuf::int32 addvalue_;
  ::std::string* itemtype_;
  ::google::protobuf::int32 finalvalue_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_upRole_2eproto();
  friend void protobuf_AssignDesc_upRole_2eproto();
  friend void protobuf_ShutdownFile_upRole_2eproto();

  void InitAsDefaultInstance();
  static PUpRole* default_instance_;
};
// ===================================================================


// ===================================================================

// PUpRole

// required int32 fieldType = 1;
inline bool PUpRole::has_fieldtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PUpRole::set_has_fieldtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PUpRole::clear_has_fieldtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PUpRole::clear_fieldtype() {
  fieldtype_ = 0;
  clear_has_fieldtype();
}
inline ::google::protobuf::int32 PUpRole::fieldtype() const {
  return fieldtype_;
}
inline void PUpRole::set_fieldtype(::google::protobuf::int32 value) {
  set_has_fieldtype();
  fieldtype_ = value;
}

// required int32 addValue = 2;
inline bool PUpRole::has_addvalue() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PUpRole::set_has_addvalue() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PUpRole::clear_has_addvalue() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PUpRole::clear_addvalue() {
  addvalue_ = 0;
  clear_has_addvalue();
}
inline ::google::protobuf::int32 PUpRole::addvalue() const {
  return addvalue_;
}
inline void PUpRole::set_addvalue(::google::protobuf::int32 value) {
  set_has_addvalue();
  addvalue_ = value;
}

// required int32 finalValue = 3;
inline bool PUpRole::has_finalvalue() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PUpRole::set_has_finalvalue() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PUpRole::clear_has_finalvalue() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PUpRole::clear_finalvalue() {
  finalvalue_ = 0;
  clear_has_finalvalue();
}
inline ::google::protobuf::int32 PUpRole::finalvalue() const {
  return finalvalue_;
}
inline void PUpRole::set_finalvalue(::google::protobuf::int32 value) {
  set_has_finalvalue();
  finalvalue_ = value;
}

// required string itemType = 4;
inline bool PUpRole::has_itemtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PUpRole::set_has_itemtype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PUpRole::clear_has_itemtype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PUpRole::clear_itemtype() {
  if (itemtype_ != &::google::protobuf::internal::kEmptyString) {
    itemtype_->clear();
  }
  clear_has_itemtype();
}
inline const ::std::string& PUpRole::itemtype() const {
  return *itemtype_;
}
inline void PUpRole::set_itemtype(const ::std::string& value) {
  set_has_itemtype();
  if (itemtype_ == &::google::protobuf::internal::kEmptyString) {
    itemtype_ = new ::std::string;
  }
  itemtype_->assign(value);
}
inline void PUpRole::set_itemtype(const char* value) {
  set_has_itemtype();
  if (itemtype_ == &::google::protobuf::internal::kEmptyString) {
    itemtype_ = new ::std::string;
  }
  itemtype_->assign(value);
}
inline void PUpRole::set_itemtype(const char* value, size_t size) {
  set_has_itemtype();
  if (itemtype_ == &::google::protobuf::internal::kEmptyString) {
    itemtype_ = new ::std::string;
  }
  itemtype_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* PUpRole::mutable_itemtype() {
  set_has_itemtype();
  if (itemtype_ == &::google::protobuf::internal::kEmptyString) {
    itemtype_ = new ::std::string;
  }
  return itemtype_;
}
inline ::std::string* PUpRole::release_itemtype() {
  clear_has_itemtype();
  if (itemtype_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = itemtype_;
    itemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void PUpRole::set_allocated_itemtype(::std::string* itemtype) {
  if (itemtype_ != &::google::protobuf::internal::kEmptyString) {
    delete itemtype_;
  }
  if (itemtype) {
    set_has_itemtype();
    itemtype_ = itemtype;
  } else {
    clear_has_itemtype();
    itemtype_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_upRole_2eproto__INCLUDED
