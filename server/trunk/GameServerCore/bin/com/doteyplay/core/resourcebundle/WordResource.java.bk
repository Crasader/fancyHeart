package com.pwrd.core.resourcebundle;

import com.pwrd.core.util.StrUtils;

/**
 * 外部接口
 * 
 * @author .暂时废弃，我们都不这么用
 * @deprecated
 */
public class WordResource {

	public String language;

	public String bundleFile;

	public WordResource() {
	}

	public void _init(String language, String bundleFile) {
		this.language = language;
		this.bundleFile = bundleFile;
	}
	

	public String _get(String key) {
		if (key == null) {
			return "";
		}

		if (StrUtils.empty(language)) {
			language = LanguageResource.DEFAULT_LANGUAGE;
		}

		if (StrUtils.empty(bundleFile)) {
			bundleFile = LanguageResource.DEFAULT_BUNDLE_FILE;
		}

		return MultipleLanguage.getMessage(LanguageResource.getBundle(language,
				bundleFile), key, key);// 判定错误用
	}

	public String _get(String key, String defvalue) {
		if (key == null) {
			return "";
		}

		if (StrUtils.empty(language)) {
			language = LanguageResource.DEFAULT_LANGUAGE;
		}

		return MultipleLanguage.getMessage(
				LanguageResource.getBundle(language,bundleFile), key, defvalue);
	}

	public void _loadResourceBundle() {
		LanguageResource.getBundle(language,bundleFile);
	}

	/**
	 * 单例，中文
	 */
	private static WordResource _instantce = new WordResource();

	private static WordResource getInstance() {		
		return _instantce;
	}
	
	public static void init(String language, String bundleFile){
		getInstance()._init(language, bundleFile);
	}

	/**
	 * 加载全部资源
	 */
	public static void loadResource() {
		getInstance()._loadResourceBundle();
		// TODO
		// ConstantLoader.loadConstant();
	}

	/**
	 * 根据键值获取对应的字符串
	 * 
	 * @param key
	 * @return
	 */
	public static String get(String key) {
		return getInstance()._get(key);
	}

	/**
	 * 根据键值获取对应的字符串,如果没有则返回默认值
	 * 
	 * @param key
	 * @param dftValue
	 * @return
	 */
	public static String get(String key, String dftValue) {
		return getInstance()._get(key, dftValue);
	}

	// 测试用
	private static String get(String key, String language, String defvalue) {
		if (key == null) {
			return "";
		}

		String tmpLanguage = language;

		if (StrUtils.empty(tmpLanguage)) {
			tmpLanguage = LanguageResource.DEFAULT_LANGUAGE;
		}

		return MultipleLanguage.getMessage(LanguageResource
				.getBundle(tmpLanguage,LanguageResource.DEFAULT_BUNDLE_FILE), key, defvalue);
	}

	public static void main(String[] args) {
		// ConfigLoader.initConfig();
		// System.out.println(get("test"));
	}
}
